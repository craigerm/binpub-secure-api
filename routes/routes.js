module.exports = function (server, models) {  console.log('starting routes');// Put any routing, response, etc. logic here. This allows us to define these functions// only once, and it will be re-used on both the HTTP and HTTPs servers.var auth = require('../auth/auth')  , posts = require('./posts')  , users = require('./users')  , repos = require('./repos')  , topics = require('./topics')  , commits = require('./commits')  , messages = require('./messages');//initialize passport  console.log('pre auth'); // Passport session setup.//   To support persistent login sessions, Passport needs to be able to//   serialize users into and deserialize users out of the session.  Typically,//   this will be as simple as storing the user ID when serializing, and finding//   the user by ID when deserializing.  However, since this example does not//   have a database of user records, the complete GitHub profile is serialized//   and deserialized. auth.stampPassport();server = auth.setup(server);server = posts(server);server = topics(server);server = commits(server);server = repos(server);server = users(server);server = messages(server, models);return server;}